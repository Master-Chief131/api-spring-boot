# ===================================================================
# CONFIGURACIONES PARA DIFERENTES ESCENARIOS DE DESPLIEGUE
# ===================================================================

# ===================================================================
# ESCENARIO 1: WEBAPPS EN EL MISMO TOMCAT (RECOMENDADO)
# ===================================================================
# Configuración para cuando api-spring-boot.war y erp-system.war
# están desplegados en el mismo servidor Tomcat

# Usar localhost para máximo rendimiento
erp.base.url=http://localhost:8080
erp.same.tomcat=true
erp.webapp.context=/erp

# Rutas de los servlets (relativas al contexto ERP)
erp.servlet.validar-usuario=/erp/ValidarUsuario
erp.servlet.cambiar-clave=/erp/CambiarClave
erp.servlet.buscar-cliente=/erp/BuscarCliente
erp.servlet.cotizacion=/erp/CotizacionServlet

# Timeouts más cortos para mismo servidor
erp.http.timeout.connect=10000
erp.http.timeout.read=15000

# ===================================================================
# ESCENARIO 2: SERVIDORES SEPARADOS EN LA MISMA RED
# ===================================================================
# Configuración para cuando el ERP está en otro servidor
# pero en la misma red local

# erp.base.url=http://192.168.1.100:8080
# erp.same.tomcat=false
# erp.servlet.validar-usuario=/erp/ValidarUsuario
# erp.servlet.cambiar-clave=/erp/CambiarClave
# erp.servlet.buscar-cliente=/erp/BuscarCliente
# erp.servlet.cotizacion=/erp/CotizacionServlet
# erp.http.timeout.connect=30000
# erp.http.timeout.read=45000

# ===================================================================
# ESCENARIO 3: ERP EN SERVIDOR REMOTO
# ===================================================================
# Configuración para cuando el ERP está en un servidor remoto
# (requiere mayor configuración de timeouts y posible SSL)

# erp.base.url=https://erp.miempresa.com:8443
# erp.same.tomcat=false
# erp.servlet.validar-usuario=/erp/ValidarUsuario
# erp.servlet.cambiar-clave=/erp/CambiarClave
# erp.servlet.buscar-cliente=/erp/BuscarCliente
# erp.servlet.cotizacion=/erp/CotizacionServlet
# erp.http.timeout.connect=60000
# erp.http.timeout.read=120000

# ===================================================================
# CONFIGURACIONES ADICIONALES
# ===================================================================

# Pool de conexiones HTTP (para alto volumen)
# erp.http.pool.max-total=50
# erp.http.pool.max-per-route=20

# Configuración SSL (si es necesario)
# erp.ssl.trust-store=/path/to/truststore.jks
# erp.ssl.trust-store-password=password

# Configuración de logging para debugging
# logging.level.com.example.demo.service.ErpClientService=DEBUG
# logging.level.org.springframework.web.client.RestTemplate=DEBUG

# ===================================================================
# VARIABLES DE ENTORNO (OPCIÓN ALTERNATIVA)
# ===================================================================
# En lugar de configurar en application.properties,
# puedes usar variables de entorno:

# Windows:
# set ERP_BASE_URL=http://localhost:8080
# set ERP_SAME_TOMCAT=true
# set ERP_SERVLET_VALIDAR_USUARIO=/erp/ValidarUsuario

# Linux/Mac:
# export ERP_BASE_URL=http://localhost:8080
# export ERP_SAME_TOMCAT=true
# export ERP_SERVLET_VALIDAR_USUARIO=/erp/ValidarUsuario

# ===================================================================
# RECOMENDACIONES POR ESCENARIO
# ===================================================================

# MISMO TOMCAT:
# ✅ Usar comunicación directa (ErpDirectService) para máximo rendimiento
# ✅ URLs localhost
# ✅ Timeouts cortos
# ✅ Ideal para entornos de desarrollo y producción simple

# SERVIDORES SEPARADOS:
# ✅ Usar comunicación HTTP (ErpClientService)
# ✅ IPs de red local
# ✅ Timeouts medios
# ✅ Ideal para entornos distribuidos

# SERVIDOR REMOTO:
# ✅ Usar comunicación HTTP con SSL
# ✅ URLs completas con dominio
# ✅ Timeouts largos
# ✅ Configuración de seguridad adicional
# ✅ Ideal para entornos cloud o multi-ubicación
